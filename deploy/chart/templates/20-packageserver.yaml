apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.packagemanifests.apps.coreos.com
spec:
  insecureSkipTLSVerify: true
  group: packagemanifests.apps.coreos.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: api
    namespace: packagemanifest
  version: v1alpha1
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: packagemanifest-apiserver
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: packagemanifest:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: packagemanifest-apiserver
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: packagemanifest-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: packagemanifest-apiserver
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: package-apiserver-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aggregated-apiserver-clusterrole
subjects:
- kind: ServiceAccount
  name: packagemanifest-apiserver
  namespace: {{ .Values.namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregated-apiserver-clusterrole
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "watch", "list"]
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: package-manifest-apiserver
  namespace: {{ .Values.namespace }}
  labels:
    app: package-manifest-apiserver
    tectonic-operators.coreos.com/managed-by: tectonic-x-operator
spec:
  strategy:
    type: RollingUpdate
  replicas: {{ .Values.packageserver.replicaCount }}
  selector:
    matchLabels:
      app: package-manifest-apiserver
  template:
    metadata:
      labels:
        app: package-manifest-apiserver
    spec:
      serviceAccountName: packagemanifest-apiserver
      containers:
      - name: package-manifest-apiserver
        command:
        - /bin/package-server
        {{- if .Values.packageserver.commandArgs }}
        - {{ .Values.packageserver.commandArgs }}
        {{- end }}
        image: {{ .Values.packageserver.image.ref }}
        imagePullPolicy: {{ .Values.packageserver.image.pullPolicy }}
        ports:
            - containerPort: {{ .Values.packageserver.service.internalPort }}
        livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.packageserver.service.internalPort }}
        readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.packageserver.service.internalPort }}
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    apiserver: "true"
